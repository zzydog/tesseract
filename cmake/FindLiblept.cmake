#
# Find Leptonica
#
# Exported variables:
#    LEPTONICA_FOUND
#    LEPTONICA_INCLUDE_DIRS
#    LEPTONICA_LIBRARIES
#
#    LEPTONICA_VERSION
#    LEPTONICA_MAJOR_VERSION
#    LEPTONICA_MINOR_VERSION
#

find_path(LEPTONICA_INCLUDE_DIR leptonica/allheaders.h
	HINTS
	/usr/include
	/usr/local/include
	/opt/include
	/opt/local/include
	${LEPTONICA_DIRECTORY}/include
)
if(NOT "${LEPTONICA_INCLUDE_DIR}" STREQUAL "LEPTONICA_INCLUDE_DIR-NOTFOUND")
	set(LEPTONICA_INCLUDE_DIRS ${LEPTONICA_INCLUDE_DIR}/leptonica)
	file(STRINGS ${LEPTONICA_INCLUDE_DIRS}/allheaders.h LEPTONICA_MAJOR_VERSION REGEX "LIBLEPT_MAJOR_VERSION")
	file(STRINGS ${LEPTONICA_INCLUDE_DIRS}/allheaders.h LEPTONICA_MINOR_VERSION REGEX "LIBLEPT_MINOR_VERSION")
	string(REGEX MATCH "[0-9]+" LEPTONICA_MAJOR_VERSION ${LEPTONICA_MAJOR_VERSION})
	string(REGEX MATCH "[0-9]+" LEPTONICA_MINOR_VERSION ${LEPTONICA_MINOR_VERSION})
	set(LEPTONICA_VERSION ${LEPTONICA_MAJOR_VERSION}.${LEPTONICA_MINOR_VERSION})
endif()

find_library(LEPTONICA_LIBRARY NAMES lept liblept
	HINTS
	/usr/lib
	/usr/local/lib
	/opt/lib
	/opt/local/lib
	${LEPTONICA_DIRECTORY}/lib
)
set(LEPTONICA_LIBRARIES ${LEPTONICA_LIBRARY})

include(FindPackageHandleStandardArgs)

find_package_handle_standard_args(Leptonica
	REQUIRED_VARS
	LEPTONICA_LIBRARIES
	LEPTONICA_INCLUDE_DIRS
	VERSION_VAR LEPTONICA_VERSION
	FAIL_MESSAGE "Try to set Leptonica_DIR or Leptonica_ROOT"
)

mark_as_advanced(LEPTONICA_INCLUDE_DIRS LEPTONICA_LIBRARIES)

